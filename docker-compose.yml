version: '3.8'
x-environment-defaults: &environment-defaults
    DEBUG: "False"
    POSTGRES_DB: "postgres"
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "postgres"
    DB_HOST: "postgres"
    DB_PORT: 5432
    CELERY_BROKER_URL: "redis://my_redis:6379/0"
    CELERY_RESULT_BACKEND: "redis://my_redis:6379/0"
    SECRET_KEY: "secret"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - prediction-network

  dfrsite:
    build:
      context: ./dfrsite
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - my_redis
    environment:
      <<: *environment-defaults
    volumes:
      - static_volume:/app/static
    networks:
      - prediction-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
    ports:
      - "80:80"
    depends_on:
      - dfrsite
    networks:
      - prediction-network

  my_redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - prediction-network

  celery:
    build:
      context: ./dfrsite
    command: celery -A dfrsite worker --loglevel=info
    depends_on:
      - my_redis
      - postgres
    environment:
      <<: *environment-defaults
    networks:
      - prediction-network

  celery-beat:
    build:
      context: ./dfrsite
    command: celery -A dfrsite beat --loglevel=info
    depends_on:
      - my_redis
      - postgres
    environment:
      <<: *environment-defaults
    networks:
      - prediction-network

volumes:
  pg_data:
  static_volume:

networks:
  prediction-network:
    driver: bridge